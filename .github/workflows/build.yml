name: Build & push Docker images to GCP Artifact Registry

on:
  workflow_dispatch:
  push:
    branches:
      - cleot/build-push-to-registry
#   push:
#     branches: [ "master" ]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  # id-token: write # For Workload Identity Federation

env:
    PROJECT_ID: "bitcr-shared"
    GAR_LOCATION: "europe-west1"
    REPOSITORY: "bitcr-wildcat-dev"
    GAR_PATH: "europe-west1-docker.pkg.dev/bitcr-shared/bitcr-wildcat-dev"
    # base image
    BASE_IMAGE_NAME: "wildcat/base-image"
    BASE_IMAGE_CACHE_GAR_TAG: "europe-west1-docker.pkg.dev/bitcr-shared/bitcr-wildcat-dev/wildcat-base-cache:${{ github.ref_name }}"

jobs:
  base-image:
    name: Build Base Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker auth for GAR (for base image cache)
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet


    # ----------------------------------------------------------------------
    # Build and Cache Base image
    # ----------------------------------------------------------------------

    - name: Build Docker Base Image (with GAR cache)
      run: |
        echo "Building base image. Local tag: ${{ env.BASE_IMAGE_NAME }}. Cache target: ${{ env.BASE_IMAGE_CACHE_GAR_TAG }}"
        DOCKER_BUILDKIT=1 docker buildx build \
          --tag ${{ env.BASE_IMAGE_NAME }} \
          --file docker/base-image/Dockerfile \
          --cache-from=type=registry,ref=${{ env.BASE_IMAGE_CACHE_GAR_TAG }} \
          --cache-to=type=registry,ref=${{ env.BASE_IMAGE_CACHE_GAR_TAG }},mode=max \ #
          --load \
          . # Build context is repository root
        echo "Base image build complete and loaded as ${{ env.BASE_IMAGE_NAME }}"

      # cache-from: type=gha

        

  wildcat-images:
    name: Build and Push Wildcat Images
    runs-on: ubuntu-latest
    needs: base-image    
  
    # ----------------------------------------------------------------------
    # Wildcat services
    # ----------------------------------------------------------------------
    strategy:
      fail-fast: false
      matrix:
        service:
          - name: bcr-wdc-key-service
            dockerfile_path: docker/key-service/Dockerfile
          - name: bcr-wdc-treasury-service
            dockerfile_path: docker/treasury-service/Dockerfile
          - name: bcr-wdc-swap-service
            dockerfile_path: docker/swap-service/Dockerfile
          - name: bcr-wdc-quote-service
            dockerfile_path: docker/quote-service/Dockerfile
          - name: bcr-wdc-wallet-aggregator
            dockerfile_path: docker/wallet-aggregator/Dockerfile
          - name: bcr-wdc-ebpp
            dockerfile_path: docker/ebpp/Dockerfile
          - name: bcr-wdc-ebill-service
            dockerfile_path: docker/ebill-service/Dockerfile


    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker auth
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

    # ----------------------------------------------------------------------
    # Metadata 
    # ----------------------------------------------------------------------
    - name: Docker Metadata for ${{ matrix.service.name }}
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.GAR_PATH }}/${{ matrix.service.name }}
        tags: |
          type=ref,event=branch
          type=sha,prefix=sha-
          type=semver,pattern={{version}}
          type=schedule,pattern=nightly
          # Add 'latest' tag if on the default branch
          type=match,pattern=master,value=latest

    # ----------------------------------------------------------------------
    # Build and Push Wildcat Images
    # ----------------------------------------------------------------------
    - name: Build and Push ${{ matrix.service.name }}
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ matrix.service.dockerfile_path }}
        
        push: true 
        # Optional: push: ${{ github.event_name != 'pull_request' }}
        
        tags: ${{ steps.meta.outputs.tags }}
        
        labels: ${{ steps.meta.outputs.labels }}
        
        # Optional: Add build caching for the service image itself if it has many layers
        # cache-from: type=registry,ref=${{ env.GAR_PATH }}/${{ matrix.service.name }}:buildcache
        # cache-to: type=registry,ref=${{ env.GAR_PATH }}/${{ matrix.service.name }}:buildcache,mode=max

    # ----------------------------------------------------------------------
    # Artifact attestation
    # ----------------------------------------------------------------------

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.GAR_PATH }}/${{ matrix.service.name }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true