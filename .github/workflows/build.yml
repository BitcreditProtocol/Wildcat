name: Build & push Docker images to GCP Artifact Registry

on:
  workflow_dispatch:
  push:
    branches:
      - cleot/build-push-to-registry
#   push:
#     branches: [ "master" ]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  # id-token: write # For Workload Identity Federation

env:
    PROJECT_ID: "bitcr-shared"
    GAR_LOCATION: "europe-west1"
    REPOSITORY: "bitcr-wildcat-dev"
    GAR_PATH: "europe-west1-docker.pkg.dev/bitcr-shared/bitcr-wildcat-dev"
    # base image
    BASE_IMAGE_NAME: "wildcat/base-image"
    BASE_IMAGE_CACHE: "europe-west1-docker.pkg.dev/bitcr-shared/bitcr-wildcat-dev/wildcat-base-cache"
    BASE_TAR: "base-image.tar"

# ───────────────────────────────
# 1) build base once, upload tar
# ───────────────────────────────
jobs:
  base-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker auth for Artifact Registry
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

    # ───────────────────────────────
    # Build & load the base image
    # ───────────────────────────────
    - name: Build base image (remote cache, local load)
      run: |
        CACHE_TAG="${GITHUB_REF_NAME//\//-}"
        DOCKER_BUILDKIT=1 docker buildx build \
          --file docker/base-image/Dockerfile \
          --tag "${BASE_IMAGE_NAME}" \
          --cache-from=type=registry,ref="${BASE_IMAGE_CACHE}:${CACHE_TAG}" \
          --cache-to=type=registry,ref="${BASE_IMAGE_CACHE}:${CACHE_TAG}",mode=max \
          --output=type=docker,dest="${BASE_TAR}",name="${BASE_IMAGE_NAME}" \
          .

    - uses: actions/upload-artifact@v4
      with:
        name: base-image
        path: "${{ env.BASE_TAR }}"
        retention-days: 1          # keep just long enough for this workflow

# ───────────────────────────────
# 2) service matrix (needs base)
# ───────────────────────────────
  wildcat-images:
    needs: base-image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false 
      #max-parallel: 1
      matrix:
        service:
          - name: bcr-wdc-key-service
            dockerfile: docker/key-service/Dockerfile
          - name: bcr-wdc-treasury-service
            dockerfile: docker/treasury-service/Dockerfile
          - name: bcr-wdc-swap-service
            dockerfile: docker/swap-service/Dockerfile
          - name: bcr-wdc-quote-service
            dockerfile: docker/quote-service/Dockerfile
          - name: bcr-wdc-wallet-aggregator
            dockerfile: docker/wallet-aggregator/Dockerfile
          - name: bcr-wdc-ebpp
            dockerfile: docker/ebpp/Dockerfile
          - name: bcr-wdc-ebill-service
            dockerfile: docker/ebill-service/Dockerfile

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker

    - name: Docker auth for Artifact Registry
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

    - uses: actions/download-artifact@v4
      with:
        name: base-image
        path: .

    - name: Load base image
      run: docker load -i "${BASE_TAR}"

    # ─────────────────────────────
    # metadata for service image
    # ─────────────────────────────
    - id: meta
      name: Metadata for ${{ matrix.service.name }}
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.GAR_PATH }}/${{ matrix.service.name }}
        tags: |
          type=ref,event=branch
          type=sha,prefix=sha-
          type=semver,pattern={{version}}
          type=schedule,pattern=nightly
          # Add 'latest' tag if on the default branch
          type=match,pattern=master,value=latest

    # ─────────────────────────────
    # build & push service image
    # ─────────────────────────────
    - id: push
      name: Build & push ${{ matrix.service.name }}
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ matrix.service.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # Uncomment for per-service cache
        # cache-from: type=registry,ref=${{ env.GAR_PATH }}/${{ matrix.service.name }}:buildcache
        # cache-to:   type=registry,ref=${{ env.GAR_PATH }}/${{ matrix.service.name }}:buildcache,mode=max

    # ─────────────────────────────
    # provenance
    # ─────────────────────────────
    - uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.GAR_PATH }}/${{ matrix.service.name }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true