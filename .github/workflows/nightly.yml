name: build and push nightly Docker images

on:
  push:
    branches:
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

env:
    PROJECT_ID: "bitcr-shared"
    GAR_LOCATION: "europe-west1"
    REPOSITORY: "bitcr-wildcat-dev"
    GAR_PATH: "europe-west1-docker.pkg.dev/bitcr-shared/bitcr-wildcat-dev"
    BASE_IMAGE_NAME: "wildcat/base-image"
    BASE_IMAGE_CACHE: "europe-west1-docker.pkg.dev/bitcr-shared/bitcr-wildcat-dev/wildcat-base-cache"
    BASE_TAR: "base-image.tar"

jobs:

# ───────────────────────────────
# build base image, cache, upload local artifact
# ───────────────────────────────
  base-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Authenticate to GCP
      id: auth
      uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
      with:
        workload_identity_provider: ${{ secrets.GCLOUD_WIF_PROVIDER }}
        service_account: ${{ secrets.GCLOUD_SERVICE_ACCOUNT }}
        token_format: access_token

    - name: Auth w/ registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

    - name: Build base image (remote cache, local load)
      run: |
        CACHE_TAG="${GITHUB_REF_NAME//\//-}"
        DOCKER_BUILDKIT=1 docker buildx build \
          --platform linux/amd64 \
          --file docker/base-image/Dockerfile \
          --tag "${BASE_IMAGE_NAME}" \
          --cache-from=type=registry,ref="${BASE_IMAGE_CACHE}:${CACHE_TAG}" \
          --cache-to=type=registry,ref="${BASE_IMAGE_CACHE}:${CACHE_TAG}",mode=max \
          --output type=docker,dest="${BASE_TAR}",name="${BASE_IMAGE_NAME}" \
          .

    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: base-image
        path: "${{ env.BASE_TAR }}"
        retention-days: 1

# ───────────────────────────────
# build & push wildcat images
# ───────────────────────────────
  wildcat-images:
    needs: base-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      attestations: write
    strategy:
      fail-fast: false
      #max-parallel: 1
      matrix:
        service:
          - name: bcr-wdc-key-service
            dockerfile: docker/key-service/Dockerfile
          - name: bcr-wdc-treasury-service
            dockerfile: docker/treasury-service/Dockerfile
          - name: bcr-wdc-swap-service
            dockerfile: docker/swap-service/Dockerfile
          - name: bcr-wdc-quote-service
            dockerfile: docker/quote-service/Dockerfile
          - name: bcr-wdc-wallet-aggregator
            dockerfile: docker/wallet-aggregator/Dockerfile
          - name: bcr-wdc-ebpp
            dockerfile: docker/ebpp/Dockerfile
          - name: bcr-wdc-ebill-service
            dockerfile: docker/ebill-service/Dockerfile
          - name: bcr-wdc-eiou-service
            dockerfile: docker/eiou-service/Dockerfile
          - name: bcr-wdc-balance-collector
            dockerfile: docker/balance-collector/Dockerfile

    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Authenticate to GCP
      id: auth
      uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
      with:
        workload_identity_provider: ${{ secrets.GCLOUD_WIF_PROVIDER }}
        service_account: ${{ secrets.GCLOUD_SERVICE_ACCOUNT }}
        token_format: access_token

    - name: Auth w/ registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      with:
        driver: docker


    - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: base-image
        path: .

    - name: Load base image
      run: docker load -i "${BASE_TAR}"

    - id: meta
      name: Metadata for ${{ matrix.service.name }}
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
      with:
        images: ${{ env.GAR_PATH }}/${{ matrix.service.name }}
        tags: |
          type=match,pattern=dev,value=nightly

    - id: push
      name: Build & push ${{ matrix.service.name }}
      uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6.17.0
      with:
        context: .
        file: ${{ matrix.service.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # Uncomment for per-service cache
        # cache-from: type=registry,ref=${{ env.GAR_PATH }}/${{ matrix.service.name }}:buildcache
        # cache-to:   type=registry,ref=${{ env.GAR_PATH }}/${{ matrix.service.name }}:buildcache,mode=max

    # ─────────────────────────────
    # provenance
    # ─────────────────────────────
    - uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd # v2.3.0
      with:
        subject-name: ${{ env.GAR_PATH }}/${{ matrix.service.name }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
