name: 'Deploy to DEV (wildcat-dev-docker)'

on:
  workflow_dispatch:
    inputs:
      delete_ebpp_data:
        description: "Remove ebpp data?"
        type: boolean
        default: false
      delete_treasury_data:
        description: "Remove treasury-service data?"
        type: boolean
        default: false
      delete_surrealdb_data:
        description: "DANGER: Remove surrealdb data?"
        type: boolean
        default: false
      delete_all_data:
        description: "DANGER: Remove all data?"
        type: boolean
        default: false

jobs:
  deploy-dev:
    name: Deploy to dev
    if: github.event_name == 'workflow_dispatch'

    permissions:
      contents: read
      deployments: write
      id-token: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}
      cancel-in-progress: true

    ##############################################################
    # -> wildcat-dev-docker
    runs-on: [self-hosted, wildcat-dev-docker]    
    environment: dev

    env:
      GAR_LOCATION: ${{ vars.GAR_LOCATION }}
      DEPLOY_PATH: ${{ vars.DEPLOY_PATH }}
      DATA_PATH: ${{ vars.DATA_PATH }}
      NGINX_PATH: ${{ vars.NGINX_PATH }}
      MINT_SEED_PHRASE: ${{ secrets.MINT_SEED_PHRASE }}
      MINT_IDENTITY: ${{ secrets.MINT_IDENTITY }}

    
    steps:
      - name: 'Environment Check'
        run: |
          echo "--------------------------------------------------"
          echo "Checking hostname:"
          hostname
          echo "--------------------------------------------------"
          echo "I am running in this directory:"
          pwd
          echo "--------------------------------------------------"
          echo "My user is:"
          whoami
          echo "--------------------------------------------------"
          echo "Verifying user ID and group memberships..."
          id

      - name: Checkout ${{ github.sha }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Mirror repo to ${{ env.DEPLOY_PATH }}
        run: |
          set -euo pipefail
          mkdir -p ${{ env.DEPLOY_PATH }}
          rsync -a --no-owner --no-group --delete --exclude '.git' ./ ${{ env.DEPLOY_PATH }}/

      
      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
        with:
          workload_identity_provider: ${{ secrets.GCLOUD_WIF_PROVIDER }}
          service_account: ${{ secrets.GCLOUD_SERVICE_ACCOUNT }}
          token_format: access_token

      - name: Auth w/ registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: 'Create .env file'
        run: |
          echo "Creating .env file..."
          cat <<EOF > .env
          # This file is generated by a GitHub Action.
          
          IMAGE_TAG=nightly

          DATA_PATH=${{ env.DATA_PATH }}

          # Dashboard
          WDC_DASHBOARD_URL="${{ secrets.WDC_DASHBOARD_URL }}"

          # Keycloak
          KEYCLOAK_HOSTNAME=${{ secrets.KEYCLOAK_HOSTNAME }}
          KEYCLOAK_ADMIN_USER=${{ secrets.KEYCLOAK_ADMIN_USER }}
          KEYCLOAK_ADMIN_SECRET="${{ secrets.KEYCLOAK_ADMIN_SECRET }}"
          KEYCLOAK_BFF_DASHBOARD_SECRET="${{ secrets.KEYCLOAK_BFF_DASHBOARD_SECRET }}"
          KEYCLOAK_BFF_DASHBOARD_ALLOWED_REDIRECT_URIS="${{ secrets.KEYCLOAK_BFF_DASHBOARD_ALLOWED_REDIRECT_URIS }}"
          KEYCLOAK_BFF_DASHBOARD_ALLOWED_ORIGINS="${{ secrets.KEYCLOAK_BFF_DASHBOARD_ALLOWED_ORIGINS }}"

          # Testnet Configuration
          BITCOIN_NETWORK=${{ vars.BITCOIN_NETWORK }}
          BITCOIN_NETWORK_COMMAND_ARG=${{ vars.BITCOIN_NETWORK_COMMAND_ARG }}
          BITCOIN_CLI_NETWORK_ARG=${{ vars.BITCOIN_CLI_NETWORK_ARG }}
          ELECTRS_NETWORK=${{ vars.ELECTRS_NETWORK }}
          ELECTRS_DAEMON_RPC_ADDR=${{ vars.ELECTRS_DAEMON_RPC_ADDR }}
          ELECTRS_DAEMON_P2P_ADDR=${{ vars.ELECTRS_DAEMON_P2P_ADDR }}

          UID=1000
          GID=1000

          EOF
        working-directory: ${{ env.DEPLOY_PATH }}
    
      - name: Validate compose config
        run: |
          docker compose \
          -f docker-compose.yml \
          -f deployment-configuration.yml \
          config --quiet
        working-directory: ${{ env.DEPLOY_PATH }}

      - name: 'Pull Latest Images'
        id: pull
        run: |
            docker compose \
            -f docker-compose.yml \
            -f deployment-configuration.yml \
            pull
        working-directory: ${{ env.DEPLOY_PATH }}

      - name: 'Tear Down Previous Deployment'
        run: |
            docker compose \
            -f docker-compose.yml \
            -f deployment-configuration.yml \
            down --remove-orphans --timeout 30
        working-directory: ${{ env.DEPLOY_PATH }}
        continue-on-error: true

      - name: Remove ebpp data
        if: inputs.delete_ebpp_data || inputs.delete_all_data
        run: |
          echo "Removing ebpp data..."
          rm -rf ${{ env.DATA_PATH }}/ebpp/regtest/*
          rm -rf ${{ env.DATA_PATH }}/ebpp/testnet/*

      - name: Remove treasury-service data
        if: inputs.delete_treasury_data || inputs.delete_all_data
        run: |
          echo "Removing treasury-service data..."
          rm -rf ${{ env.DATA_PATH }}/treasury-service/*

      - name: Remove surrealdb data
        if: inputs.delete_surrealdb_data || inputs.delete_all_data
        run: |
          echo "Removing surrealdb data..."
          rm -rf ${{ env.DATA_PATH }}/surrealdb/*

      - name: 'Deploy'
        run: |
            docker compose \
            -f docker-compose.yml \
            -f deployment-configuration.yml \
            up -d --force-recreate
        working-directory: ${{ env.DEPLOY_PATH }}

      - name: Check running services
        run: |
          docker compose ps --services --filter "status=running"
          docker compose ps --services --filter "status=healthy"
          docker compose logs --tail=100
        working-directory: ${{ env.DEPLOY_PATH }}

      - name: Docker system prune
        run: |
          docker system prune -f --filter "until=24h" --filter "dangling=true"

          
    
      - name: 'Restart nginx reverse proxy'
        run: |
          docker compose up -d --force-recreate --remove-orphans
        working-directory: ${{ env.NGINX_PATH }}