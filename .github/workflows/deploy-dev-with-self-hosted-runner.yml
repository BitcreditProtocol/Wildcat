name: 'Self-Hosted Runner Test: Deploy to Dev'

on:
  push:
    branches:
      - 'cleot/self-hosted-deployment-workflow-2'
    # tags:
    #   - 'v*'
  # workflow_dispatch:
  #   inputs:
  #       environment:
  #         description: 'target'
  #         required: true
  #         default: 'staging'
  #         type: choice
  #         options:
  #           - dev
  #           - staging
  #           - production


env:
    GAR_LOCATION: "europe-west1"
    DEPLOY_PATH: "/home/gh-runner/deployment/wildcat"
    DATA_PATH: /home/gh-runner/deployment/wildcat_data
    NGINX_PATH: /home/gh-runner/nginx

jobs:

  deploy-dev:
    name: Deploy to Dev Environment

    permissions:
      contents: read
      deployments: write
      id-token: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    ##############################################################
    # -> wildcat-dev-docker
    runs-on: [self-hosted, wildcat-dev-docker]    
    environment: dev
    
    
    steps:
      - name: 'Environment Check'
        run: |
          echo "--------------------------------------------------"
          echo "Checking hostname:"
          hostname
          echo "--------------------------------------------------"
          echo "I am running in this directory:"
          pwd
          echo "--------------------------------------------------"
          echo "My user is:"
          whoami
          echo "--------------------------------------------------"
          echo "Verifying user ID and group memberships..."
          id

      - name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Mirror repo to ${{ env.DEPLOY_PATH }}
        run: |
          mkdir -p ${{ env.DEPLOY_PATH }}
          rsync -a --delete --exclude '.git' ./ ${{ env.DEPLOY_PATH }}/

      
      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
        with:
          workload_identity_provider: ${{ secrets.GCLOUD_WIF_PROVIDER }}
          service_account: ${{ secrets.GCLOUD_SERVICE_ACCOUNT }}
          token_format: access_token

      - name: Auth w/ registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: 'Create .env file'
        run: |
          echo "Creating .env file..."
          cat <<EOF > .env
          # This file is generated by a GitHub Action. DO NOT COMMIT.
          

          DATA_PATH= ${{ env.DATA_PATH }}

          # Dashboard
          WDC_DASHBOARD_URL=${{ secrets.WDC_DASHBOARD_URL }}

          # Keycloak
          KEYCLOAK_HOSTNAME=${{ secrets.KEYCLOAK_HOSTNAME }}
          KEYCLOAK_ADMIN_USER=${{ secrets.KEYCLOAK_ADMIN_USER }}
          KEYCLOAK_ADMIN_SECRET=${{ secrets.KEYCLOAK_ADMIN_SECRET }}
          KEYCLOAK_BFF_DASHBOARD_SECRET=${{ secrets.KEYCLOAK_BFF_DASHBOARD_SECRET }}
          KEYCLOAK_BFF_DASHBOARD_ALLOWED_REDIRECT_URIS=${{ secrets.KEYCLOAK_BFF_DASHBOARD_ALLOWED_REDIRECT_URIS }}
          KEYCLOAK_BFF_DASHBOARD_ALLOWED_ORIGINS=${{ secrets.KEYCLOAK_BFF_DASHBOARD_ALLOWED_ORIGINS }}

          # Testnet Configuration
          BITCOIN_NETWORK=${{ vars.BITCOIN_NETWORK }}
          BITCOIN_NETWORK_COMMAND_ARG=${{ vars.BITCOIN_NETWORK_COMMAND_ARG }}
          BITCOIN_CLI_NETWORK_ARG=${{ vars.BITCOIN_CLI_NETWORK_ARG }}
          ELECTRS_NETWORK=${{ vars.ELECTRS_NETWORK }}
          ELECTRS_DAEMON_RPC_ADDR=${{ vars.ELECTRS_DAEMON_RPC_ADDR }}
          ELECTRS_DAEMON_P2P_ADDR=${{ vars.ELECTRS_DAEMON_P2P_ADDR }}

          # Set User and Group ID for docker containers
          UID=1000
          GID=1000

          EOF
        working-directory: ${{ env.DEPLOY_PATH }} # Ensures file is created in /home/gh-runner/wildcat

      - name: 'Deploy'
        run: |
            docker compose \
            -f docker-compose.yml \
            -f deployment-configuration.yml \
            up -d --pull always --force-recreate --remove-orphans
        env:
          IMAGE_TAG: "nightly"
        working-directory: ${{ env.DEPLOY_PATH }} # Ensures command is run in /home/gh-runner/wildcat

      - name: 'Restart nginx reverse proxy'
        run: |
          docker compose up -d --force-recreate --remove-orphans
        working-directory: ${{ env.NGINX_PATH }}